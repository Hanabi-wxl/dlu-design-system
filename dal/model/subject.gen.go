// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/plugin/soft_delete"
)

const TableNameSubject = "subject"

// Subject mapped from table <subject>
type Subject struct {
	ID                     int64                 `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`                    // id
	Headline               string                `gorm:"column:headline;type:varchar(64);not null" json:"headline"`                         // 标题
	FirstTeacherID         int64                 `gorm:"column:first_teacher_id;type:int(11);not null" json:"first_teacher_id"`             // 第一指导老师
	SecondTeacherID        *int64                `gorm:"column:second_teacher_id;type:int(11)" json:"second_teacher_id"`                    // 第二指导老师
	StudentID              *int64                `gorm:"column:student_id;type:int(11)" json:"student_id"`                                  // 学生id
	ProgressID             int64                 `gorm:"column:progress_id;type:int(11);not null;default:1" json:"progress_id"`             // 题目状态
	CollegeID              int64                 `gorm:"column:college_id;type:int(11);not null" json:"college_id"`                         // 学院
	MajorID                *int64                `gorm:"column:major_id;type:int(11)" json:"major_id"`                                      // 专业id
	RoleID                 *int64                `gorm:"column:role_id;type:int(11)" json:"role_id"`                                        // 申报人角色
	Year                   int64                 `gorm:"column:year;type:int(11);not null" json:"year"`                                     // 年份
	Abstract               string                `gorm:"column:abstract;type:text;not null" json:"abstract"`                                // 摘要
	Necessity              string                `gorm:"column:necessity;type:text;not null" json:"necessity"`                              // 选题的必要性
	Feasibility            string                `gorm:"column:feasibility;type:text;not null" json:"feasibility"`                          // 选题的可行性
	Identical              int8                  `gorm:"column:identical;type:tinyint(4);not null" json:"identical"`                        // 三年内是否有雷同题目
	TypeID                 int8                  `gorm:"column:type_id;type:tinyint(4);not null" json:"type_id"`                            // 毕业论文类型
	OriginID               int8                  `gorm:"column:origin_id;type:tinyint(4);not null" json:"origin_id"`                        // 题目来源
	NeedTotal              int64                 `gorm:"column:need_total;type:int(11);not null" json:"need_total"`                         // 拟需人数
	MajorApprovalOpinion   *string               `gorm:"column:major_approval_opinion;type:varchar(128)" json:"major_approval_opinion"`     // 专业审批意见
	MajorApprovalTime      *time.Time            `gorm:"column:major_approval_time;type:datetime" json:"major_approval_time"`               // 专业审批通过时间
	MajorApproverID        *int64                `gorm:"column:major_approver_id;type:int(11)" json:"major_approver_id"`                    // 专业审批人
	CollegeApprovalOpinion *string               `gorm:"column:college_approval_opinion;type:varchar(128)" json:"college_approval_opinion"` // 学院审批意见
	CollegeApprovalTime    *time.Time            `gorm:"column:college_approval_time;type:datetime" json:"college_approval_time"`           // 学院审批通过时间
	CollegeApproverID      *int64                `gorm:"column:college_approver_id;type:int(11)" json:"college_approver_id"`                // 学院审批人
	IsDelete               soft_delete.DeletedAt `gorm:"column:is_delete;type:int unsigned;softDelete:flag" json:"is_delete"`               // 存在标志
}

// TableName Subject's table name
func (*Subject) TableName() string {
	return TableNameSubject
}
